name: Workflow
on:
  push:
    branches: [ main ]
  pull_request: { }

jobs:
  lint:
    runs-on: ubuntu-latest
    container: python:3.11-slim
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@v3
      - run: poetry install
      - name: Check coding standards
        run: |
          poetry run black --check src/
          poetry run isort --check-only src/
          poetry run mypy src/

  test:
    runs-on: ubuntu-latest
    container: python:3.11-slim
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@v3
      - run: poetry install
      - name: Run tests
        run: poetry run pytest src/

  build-container-image:
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'pull_request'
    needs:
      - lint
      - test
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  push-container-image:
    runs-on: ubuntu-latest
    if: success() && github.ref_name == github.event.repository.default_branch
    needs:
      - lint
      - test
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build and push container image
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            APP_VERSION=${{ github.sha }}
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    needs:
      - push-container-image
    concurrency: production
    steps:
      - uses: actions/checkout@v3
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Substitute environment variables in values.yaml
        run: "envsubst < values.yaml > values_sub.yaml && mv values_sub.yaml values.yaml"
        env:
          IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}"
          MAIL_TOKEN: ${{ secrets.FASTMAIL_TOKEN }}
          MASTODON_CLIENT_SECRET: ${{ secrets.MASTODON_CLIENT_SECRET }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TWITTER_TOKEN: ${{ secrets.TWITTER_TOKEN }}
      - uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade twittergram . --install --namespace=twittergram --atomic
          kubeconfig: '${{ secrets.KUBECONFIG_RAW }}'

  clean:
    runs-on: ubuntu-latest
    concurrency: cleanup
    continue-on-error: true
    needs: [ deploy ]
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Clean up old app container images
        uses: actions/delete-package-versions@v4
        with:
          package-name: ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}
          package-type: container
          min-versions-to-keep: 10
